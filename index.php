<?php

use Pavel\Db\Databasee;
use Pavel\Db\Users;
use Pavel\Db\UserStorageFactory;

require_once 'vendor/autoload.php';
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

$db = UserStorageFactory::create($_ENV['DB_SOURCE']);
$user = new Users($db);

/*******Menu***********/

function printMenu()
{
    echo "Выберете пункт меню:\n
    1. Посмотреть всех пользователей\n
    2. Добавить пользвателя (пользватель создвстся автоматически\n
    3. Удалить пользователя\n
    0. Выход \n
    Ваш выбор:
    ";
}


printMenu();
$line = trim(fgets(STDIN));

switch ($line) {
    case 1:
        $user->showUsers();
        break;
    case 2:
        $user->createUser();
        break;
    case 3:
        echo "Введите ID пользвателя, которого хотите удалить:\n";
        $id = trim(fgets(STDIN));
        $user->deleteUser($id);
        break;
    case 0: break;
    default: echo "Вы выбрали не существующий пункт меню";
}

/*
 *
 * Необходимо написать консольное приложение, которое сможет управлять списком пользователей. Должны быть реализованы 3 консольные команды:

1. Показать список пользователей. Выводит список всех пользователей, что находятся в нашей “базе данных”
2. Добавить пользователя. Добавляет пользователя в “базу данных”. Имя, фамилию, почту - можно сгенерировать, не обязательно чтоб пользователь сам их вводил, главное, чтобы id был всегда уникальным и увеличивался по мере добавления пользователй.
3. Удалить пользователя. Удаляет пользователя из “базы данных”.
 * */

/*
 * ## Второй этап

Теперь нам необходимо сделать возможность выбора - использовать в качестве БД json файл или настоящую БД. Переключение будет осуществляться путём изменения конфиг файла. Для этого добавляем файл .env, примерно следующего содержания

# json | mysql
DB_SOURCE=mysql

Если в нём указано значение переменной DB_SOURCE=mysql - используем в качестве источника данных mysql, а если json - используем json файл
*/

/* ## Третий этап

Теперь нам необходимо продублировать все те же операции над пользователями (удаление, создание, просмотр списка), но с помощью HTTP т.е. будет 3 URL, например:

1. GET /list-users. выводит список пользователей
2. DELETE /delete-user/{id}. удаляет пользователя с переданным id
3. POST /create-user. создаёт пользователя с переданными данными. данные должны приниматься в формате JSON

Ответы должны быть в формате JSON.*/
